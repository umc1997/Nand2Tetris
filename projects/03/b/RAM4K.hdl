// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load,sel=address[0..2],a=a1,b=b1,c=c1,d=d1,e=e1,f=f1,g=g1,h=h1);

    RAM512(in=in,load=a1,address=address[3..11],out=a1o);
    RAM512(in=in,load=b1,address=address[3..11],out=b1o);
    RAM512(in=in,load=c1,address=address[3..11],out=c1o);
    RAM512(in=in,load=d1,address=address[3..11],out=d1o);
    RAM512(in=in,load=e1,address=address[3..11],out=e1o);
    RAM512(in=in,load=f1,address=address[3..11],out=f1o);
    RAM512(in=in,load=g1,address=address[3..11],out=g1o);
    RAM512(in=in,load=h1,address=address[3..11],out=h1o);

    Mux8Way16(a=a1o,b=b1o,c=c1o,d=d1o,e=e1o,f=f1o,g=g1o,h=h1o,sel=address[0..2],out=out);
}